#!/usr/bin/env ruby -n

COLOR_CODE_REGEXP ||= /\e\[\d{0,2}m/

RESET_ALL ||= "\e[0m"
RESET_TEXT ||= "\e[39m"
RESET_BACKGROUND ||= "\e[49m"

GRAY ||= "\e[37m"
WARNING ||= "\e[101m"

input = $_

process ||= false
process = false if input =~ /^#{COLOR_CODE_REGEXP}?(diff --git|@@)/

output = if process
  input.gsub! /(?<=.)#{COLOR_CODE_REGEXP}/, ''

  spaces = input.match(/^#{COLOR_CODE_REGEXP}?[ +-]?( *)/).captures.first
  spaces_prefix = "#{GRAY}#{spaces.size == 0 ? '  ' : '%2d' % spaces.size}#{RESET_TEXT}|"

  line_prefix, line_content = input.match(/^(#{COLOR_CODE_REGEXP}?[ +-]? *)(.*\n)$/).captures

  deletion = line_prefix.match(/^#{COLOR_CODE_REGEXP}?([ +-]?)/).captures.first == '-'

  unless deletion
    line_prefix.gsub! /(#{spaces})/, "#{WARNING}\\1#{RESET_BACKGROUND}" if spaces.size.odd?

    [
      /( {2,})/,
      /(,[^ \n])/,
      /({ | })/
    ].each do |regexp|
      line_content.gsub! regexp, "#{WARNING}\\1#{RESET_BACKGROUND}"
    end
  end

  "#{spaces_prefix}#{line_prefix}#{line_content}#{RESET_ALL}"
else
  input
end

print output

process = true if input =~ /^#{COLOR_CODE_REGEXP}?@@/
